import { useState, useEffect } from "react";
import { getCart } from "@/api/CartApi";
import { CartItem } from "@/types/Types";

const useFetchCart = () => {
  const [cart, setCart] = useState<CartItem[]>([]);
  const [loading, setLoading] = useState<boolean>(false);
  const [error] = useState<string | null>(null);

  useEffect(() => {
    const fetchCart = async () => {
      setLoading(true);
      try {
        const data: CartItem[] = await getCart();

        // Transform data correctly without using `any`
        const formattedCart: CartItem[] = data.map((item) => ({
          id: item.id,
          quantity: item.quantity,
          dish_data: {
            id: item.dish_data.id,
            name: item.dish_data.name,
            description: item.dish_data.description,
            recipes: item.dish_data.recipes,
            category_name: item.dish_data.category_name,
            available: item.dish_data.available,
            image: item.dish_data.image,
            price: item.dish_data.price,
          },
        }));

        setCart(formattedCart);
      } catch (err) {
        console.error("Fetch Cart Error:", err);
      } finally {
        setLoading(false);
      }
    };

    fetchCart();
  }, []);

  return { cart, loading, error };
};

export default useFetchCart;